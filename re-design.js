<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>NEO-LOGS ‚Ä¢ –ö–ò–ë–ï–†–ü–ê–ù–ö –ü–ê–ù–ï–õ–¨</title>
    
    <!-- –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª–∏–∑–º–∞ -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.11.4/gsap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.11.4/ScrollTrigger.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/particles.js/2.0.0/particles.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/animejs/3.2.1/anime.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/vanilla-tilt/1.8.0/vanilla-tilt.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/js/all.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/chroma-js/2.4.2/chroma.min.js"></script>
    <link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700;900&family=Rajdhani:wght@300;400;500;600;700&family=Exo+2:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    
    <style>
        /* üî• –ù–û–í–ê–Ø –ö–ò–ë–ï–†–ü–ê–ù–ö –°–ò–°–¢–ï–ú–ê –°–¢–ò–õ–ï–ô */
        :root {
            --bg-primary: #0a0a16;
            --bg-secondary: #151528;
            --bg-card: #1e1e3a;
            --accent-primary: #8b5ceb;
            --accent-secondary: #00d4ff;
            --accent-tertiary: #ff2a6d;
            --text-primary: #ffffff;
            --text-secondary: #a0a0c0;
            --text-glow: 0 0 10px currentColor;
            --danger: #ff3860;
            --warning: #ffdd57;
            --success: #23d160;
            --neon-shadow: 0 0 20px rgba(139, 92, 235, 0.3);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            background: linear-gradient(135deg, var(--bg-primary) 0%, #1a1a2e 50%, #16213e 100%);
            color: var(--text-primary);
            font-family: 'Exo 2', sans-serif;
            min-height: 100vh;
            overflow-x: hidden;
            position: relative;
        }

        /* üåå –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ–Ω —Å —á–∞—Å—Ç–∏—Ü–∞–º–∏ */
        #particles-js {
            position: fixed;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            z-index: -1;
        }

        /* üéÆ –ì–ª–∞–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä */
        .cyber-container {
            max-width: 1800px;
            margin: 0 auto;
            padding: 20px;
            position: relative;
        }

        /* üöÄ –•–µ–¥–µ—Ä —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π */
        .cyber-header {
            text-align: center;
            padding: 40px 0;
            position: relative;
            margin-bottom: 40px;
        }

        .cyber-header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 50%;
            transform: translateX(-50%);
            width: 200px;
            height: 3px;
            background: linear-gradient(90deg, transparent, var(--accent-primary), var(--accent-secondary), transparent);
            animation: scanLine 3s linear infinite;
        }

        @keyframes scanLine {
            0% { width: 0; opacity: 0; }
            50% { width: 200px; opacity: 1; }
            100% { width: 0; opacity: 0; left: calc(50% + 100px); }
        }

        .main-title {
            font-family: 'Orbitron', monospace;
            font-size: 4rem;
            font-weight: 900;
            background: linear-gradient(45deg, var(--accent-primary), var(--accent-secondary), var(--accent-tertiary));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            text-shadow: 0 0 30px rgba(139, 92, 235, 0.5);
            margin-bottom: 10px;
            letter-spacing: 3px;
            animation: float 6s ease-in-out infinite;
        }

        @keyframes float {
            0%, 100% { transform: translateY(0); }
            50% { transform: translateY(-10px); }
        }

        .subtitle {
            font-family: 'Rajdhani', sans-serif;
            font-size: 1.5rem;
            color: var(--text-secondary);
            text-transform: uppercase;
            letter-spacing: 4px;
        }

        /* üéõÔ∏è –°–µ—Ç–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ */
        .cyber-grid {
            display: grid;
            grid-template-columns: 320px 1fr;
            gap: 30px;
            align-items: start;
        }

        /* üéöÔ∏è –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Ñ–∏–ª—å—Ç—Ä–æ–≤ */
        .cyber-filters {
            background: rgba(30, 30, 58, 0.8);
            backdrop-filter: blur(20px);
            border: 1px solid rgba(139, 92, 235, 0.3);
            border-radius: 20px;
            padding: 25px;
            box-shadow: var(--neon-shadow);
            position: sticky;
            top: 20px;
            transform-style: preserve-3d;
            transition: all 0.3s ease;
        }

        .cyber-filters:hover {
            transform: translateY(-5px) rotateX(5deg);
            box-shadow: 0 15px 30px rgba(139, 92, 235, 0.4);
        }

        .filters-header {
            display: flex;
            align-items: center;
            margin-bottom: 25px;
            padding-bottom: 15px;
            border-bottom: 2px solid rgba(139, 92, 235, 0.3);
        }

        .filters-header i {
            font-size: 1.5rem;
            margin-right: 10px;
            color: var(--accent-primary);
        }

        .filter-group {
            margin-bottom: 25px;
            position: relative;
        }

        .filter-label {
            display: block;
            margin-bottom: 8px;
            font-family: 'Rajdhani', sans-serif;
            font-weight: 600;
            color: var(--text-secondary);
            text-transform: uppercase;
            letter-spacing: 1px;
            font-size: 0.9rem;
        }

        .cyber-input {
            width: 100%;
            padding: 12px 15px;
            background: rgba(10, 10, 22, 0.6);
            border: 1px solid rgba(139, 92, 235, 0.2);
            border-radius: 10px;
            color: var(--text-primary);
            font-family: 'Exo 2', sans-serif;
            transition: all 0.3s ease;
        }

        .cyber-input:focus {
            outline: none;
            border-color: var(--accent-primary);
            box-shadow: 0 0 15px rgba(139, 92, 235, 0.3);
        }

        .cyber-btn-group {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 15px;
            margin-top: 30px;
        }

        .cyber-btn {
            padding: 14px 20px;
            border: none;
            border-radius: 10px;
            font-family: 'Rajdhani', sans-serif;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 1px;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .cyber-btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
            transition: left 0.5s ease;
        }

        .cyber-btn:hover::before {
            left: 100%;
        }

        .cyber-btn-primary {
            background: linear-gradient(135deg, var(--accent-primary), #6a42c4);
            color: white;
            box-shadow: 0 5px 15px rgba(139, 92, 235, 0.4);
        }

        .cyber-btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(139, 92, 235, 0.6);
        }

        .cyber-btn-secondary {
            background: rgba(255, 255, 255, 0.1);
            color: var(--text-secondary);
            border: 1px solid rgba(255, 255, 255, 0.1);
        }

        .cyber-btn-secondary:hover {
            background: rgba(255, 255, 255, 0.15);
            color: var(--text-primary);
        }

        /* üìä –û—Å–Ω–æ–≤–Ω–∞—è –æ–±–ª–∞—Å—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç–∞ */
        .cyber-main {
            display: flex;
            flex-direction: column;
            gap: 30px;
        }

        /* üé™ –ö–∞—Ä—Ç–æ—á–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ */
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
        }

        .cyber-stat-card {
            background: linear-gradient(135deg, rgba(30, 30, 58, 0.8), rgba(42, 42, 72, 0.8));
            backdrop-filter: blur(10px);
            border: 1px solid rgba(139, 92, 235, 0.2);
            border-radius: 15px;
            padding: 25px;
            text-align: center;
            position: relative;
            overflow: hidden;
            transition: all 0.3s ease;
        }

        .cyber-stat-card::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(139, 92, 235, 0.1) 0%, transparent 70%);
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .cyber-stat-card:hover::before {
            opacity: 1;
        }

        .cyber-stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 30px rgba(139, 92, 235, 0.3);
        }

        .stat-icon {
            font-size: 2.5rem;
            margin-bottom: 15px;
            opacity: 0.8;
        }

        .stat-value {
            font-family: 'Orbitron', monospace;
            font-size: 2.5rem;
            font-weight: 700;
            margin-bottom: 5px;
            background: linear-gradient(45deg, var(--accent-primary), var(--accent-secondary));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .stat-label {
            font-family: 'Rajdhani', sans-serif;
            color: var(--text-secondary);
            text-transform: uppercase;
            letter-spacing: 1px;
            font-size: 0.9rem;
        }

        /* üìú –õ–µ–Ω—Ç–∞ –ª–æ–≥–æ–≤ */
        .cyber-logs-container {
            background: rgba(30, 30, 58, 0.6);
            backdrop-filter: blur(15px);
            border: 1px solid rgba(139, 92, 235, 0.3);
            border-radius: 20px;
            padding: 30px;
            box-shadow: var(--neon-shadow);
        }

        .logs-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 25px;
            padding-bottom: 15px;
            border-bottom: 2px solid rgba(139, 92, 235, 0.3);
        }

        .logs-title {
            font-family: 'Orbitron', monospace;
            font-size: 1.8rem;
            background: linear-gradient(45deg, var(--accent-primary), var(--accent-secondary));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .live-indicator {
            display: flex;
            align-items: center;
            background: rgba(255, 42, 109, 0.2);
            padding: 8px 15px;
            border-radius: 20px;
            border: 1px solid var(--accent-tertiary);
        }

        .pulse-dot {
            width: 10px;
            height: 10px;
            background: var(--accent-tertiary);
            border-radius: 50%;
            margin-right: 8px;
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0% { transform: scale(0.95); box-shadow: 0 0 0 0 rgba(255, 42, 109, 0.7); }
            70% { transform: scale(1); box-shadow: 0 0 0 10px rgba(255, 42, 109, 0); }
            100% { transform: scale(0.95); box-shadow: 0 0 0 0 rgba(255, 42, 109, 0); }
        }

        /* üé¥ –ö–∞—Ä—Ç–æ—á–∫–∏ –ª–æ–≥–æ–≤ */
        .cyber-logs-feed {
            display: flex;
            flex-direction: column;
            gap: 15px;
            max-height: 600px;
            overflow-y: auto;
            padding-right: 10px;
        }

        .cyber-logs-feed::-webkit-scrollbar {
            width: 8px;
        }

        .cyber-logs-feed::-webkit-scrollbar-track {
            background: rgba(10, 10, 22, 0.3);
            border-radius: 10px;
        }

        .cyber-logs-feed::-webkit-scrollbar-thumb {
            background: linear-gradient(45deg, var(--accent-primary), var(--accent-secondary));
            border-radius: 10px;
        }

        .cyber-log-entry {
            background: linear-gradient(135deg, rgba(42, 42, 72, 0.6), rgba(30, 30, 58, 0.8));
            border: 1px solid rgba(139, 92, 235, 0.2);
            border-radius: 15px;
            padding: 20px;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
            animation: slideIn 0.5s ease forwards;
            opacity: 0;
            transform: translateX(-20px);
        }

        @keyframes slideIn {
            to {
                opacity: 1;
                transform: translateX(0);
            }
        }

        .cyber-log-entry::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(139, 92, 235, 0.1), transparent);
            transition: left 0.5s ease;
        }

        .cyber-log-entry:hover::before {
            left: 100%;
        }

        .cyber-log-entry:hover {
            transform: translateY(-3px) scale(1.02);
            border-color: rgba(139, 92, 235, 0.5);
            box-shadow: 0 8px 25px rgba(139, 92, 235, 0.2);
        }

        .log-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 12px;
        }

        .log-category {
            display: inline-flex;
            align-items: center;
            padding: 6px 12px;
            border-radius: 20px;
            font-family: 'Rajdhani', sans-serif;
            font-weight: 600;
            font-size: 0.8rem;
            text-transform: uppercase;
            letter-spacing: 1px;
            margin-right: 10px;
        }

        .log-player {
            font-family: 'Orbitron', monospace;
            font-weight: 700;
            font-size: 1.1rem;
            background: linear-gradient(45deg, var(--accent-secondary), #00a8cc);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .log-amount {
            font-family: 'Orbitron', monospace;
            font-weight: 700;
            font-size: 1.2rem;
        }

        .log-amount.negative {
            color: var(--danger);
            text-shadow: var(--text-glow);
        }

        .log-meta {
            font-size: 0.85rem;
            color: var(--text-secondary);
            margin-bottom: 10px;
            display: flex;
            flex-wrap: wrap;
            gap: 15px;
        }

        .log-description {
            font-size: 0.95rem;
            line-height: 1.5;
            padding: 12px;
            background: rgba(10, 10, 22, 0.4);
            border-radius: 8px;
            border-left: 3px solid var(--accent-primary);
        }

        /* üîÑ –ü–∞–≥–∏–Ω–∞—Ü–∏—è */
        .cyber-pagination {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 15px;
            margin-top: 30px;
        }

        .cyber-page-btn {
            padding: 12px 20px;
            background: rgba(139, 92, 235, 0.2);
            border: 1px solid var(--accent-primary);
            border-radius: 8px;
            color: var(--text-primary);
            cursor: pointer;
            transition: all 0.3s ease;
            font-family: 'Rajdhani', sans-serif;
            font-weight: 600;
        }

        .cyber-page-btn:hover {
            background: rgba(139, 92, 235, 0.4);
            transform: translateY(-2px);
        }

        .cyber-page-btn:disabled {
            opacity: 0.5;
            cursor: not-allowed;
            transform: none;
        }

        /* üì± –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å */
        @media (max-width: 1200px) {
            .cyber-grid {
                grid-template-columns: 1fr;
            }
            
            .cyber-filters {
                position: relative;
                top: 0;
            }
            
            .main-title {
                font-size: 3rem;
            }
        }

        @media (max-width: 768px) {
            .main-title {
                font-size: 2.5rem;
            }
            
            .stats-grid {
                grid-template-columns: 1fr;
            }
            
            .cyber-btn-group {
                grid-template-columns: 1fr;
            }
            
            .log-header {
                flex-direction: column;
                gap: 10px;
            }
        }
    </style>
</head>
<body>
    <!-- üåå –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ–Ω -->
    <div id="particles-js"></div>

    <div class="cyber-container">
        <!-- üöÄ –•–µ–¥–µ—Ä -->
        <header class="cyber-header">
            <h1 class="main-title">NEO-LOGS</h1>
            <p class="subtitle">REAL-TIME SERVER MONITORING DASHBOARD</p>
        </header>

        <!-- üéõÔ∏è –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç -->
        <div class="cyber-grid">
            <!-- üéöÔ∏è –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Ñ–∏–ª—å—Ç—Ä–æ–≤ -->
            <aside class="cyber-filters" data-tilt data-tilt-max="5" data-tilt-speed="400" data-tilt-perspective="1000">
                <div class="filters-header">
                    <i class="fas fa-sliders-h"></i>
                    <h2>–§–ò–õ–¨–¢–†–´ –ò –ù–ê–°–¢–†–û–ô–ö–ò</h2>
                </div>

                <div class="filter-group">
                    <label class="filter-label">–ò–≥—Ä–æ–∫ (–ù–∏–∫–Ω–µ–π–º)</label>
                    <input type="text" class="cyber-input" placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫...">
                </div>

                <div class="filter-group">
                    <label class="filter-label">–ö–∞—Ç–µ–≥–æ—Ä–∏—è</label>
                    <select class="cyber-input">
                        <option value="">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
                        <option value="vip">VIP —á–∞—Ç</option>
                        <option value="family">–°–µ–º—å–∏</option>
                        <option value="rent">–ê—Ä–µ–Ω–¥–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞</option>
                        <option value="rp">RP —á–∞—Ç</option>
                        <option value="complaint">–ñ–∞–ª–æ–±—ã/–í–æ–ø—Ä–æ—Å—ã</option>
                        <option value="nonrp">NonRP —á–∞—Ç</option>
                        <option value="numbers">–ù–æ–º–µ—Ä–∞</option>
                    </select>
                </div>

                <div class="filter-group">
                    <label class="filter-label">ID –∏–≥—Ä–æ–∫–∞</label>
                    <input type="text" class="cyber-input" placeholder="–í–≤–µ–¥–∏—Ç–µ ID...">
                </div>

                <div class="filter-group">
                    <label class="filter-label">IP –∞–¥—Ä–µ—Å</label>
                    <input type="text" class="cyber-input" placeholder="–í–≤–µ–¥–∏—Ç–µ IP...">
                </div>

                <div class="filter-group">
                    <label class="filter-label">–°—É–º–º–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏</label>
                    <input type="number" class="cyber-input" placeholder="–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞...">
                </div>

                <div class="filter-group">
                    <label class="filter-label">–ú–∏–Ω. –≤—Ä–µ–º—è (MSK)</label>
                    <input type="datetime-local" class="cyber-input">
                </div>

                <div class="filter-group">
                    <label class="filter-label">–ú–∞–∫—Å. –≤—Ä–µ–º—è (MSK)</label>
                    <input type="datetime-local" class="cyber-input">
                </div>

                <div class="cyber-btn-group">
                    <button class="cyber-btn cyber-btn-primary">
                        <i class="fas fa-play-circle"></i> –ü—Ä–∏–º–µ–Ω–∏—Ç—å
                    </button>
                    <button class="cyber-btn cyber-btn-secondary">
                        <i class="fas fa-undo"></i> –°–±—Ä–æ—Å–∏—Ç—å
                    </button>
                </div>
            </aside>

            <!-- üìä –û—Å–Ω–æ–≤–Ω–∞—è –æ–±–ª–∞—Å—Ç—å -->
            <main class="cyber-main">
                <!-- üé™ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ -->
                <section class="stats-grid">
                    <div class="cyber-stat-card" data-tilt>
                        <div class="stat-icon">
                            <i class="fas fa-broadcast-tower"></i>
                        </div>
                        <div class="stat-value">154</div>
                        <div class="stat-label">–°–æ–±—ã—Ç–∏–π –∑–∞ —á–∞—Å</div>
                    </div>
                    <div class="cyber-stat-card" data-tilt>
                        <div class="stat-icon">
                            <i class="fas fa-exclamation-triangle"></i>
                        </div>
                        <div class="stat-value" style="color: var(--danger);">23</div>
                        <div class="stat-label">–ù–∞—Ä—É—à–µ–Ω–∏–π RP</div>
                    </div>
                    <div class="cyber-stat-card" data-tilt>
                        <div class="stat-icon">
                            <i class="fas fa-dollar-sign"></i>
                        </div>
                        <div class="stat-value" style="color: var(--success);">$1.2M</div>
                        <div class="stat-label">–û–±—â–∏–π –æ–±–æ—Ä–æ—Ç</div>
                    </div>
                    <div class="cyber-stat-card" data-tilt>
                        <div class="stat-icon">
                            <i class="fas fa-users"></i>
                        </div>
                        <div class="stat-value" style="color: var(--accent-secondary);">89</div>
                        <div class="stat-label">–ê–∫—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤</div>
                    </div>
                </section>

                <!-- üìú –õ–µ–Ω—Ç–∞ –ª–æ–≥–æ–≤ -->
                <section class="cyber-logs-container">
                    <div class="logs-header">
                        <h2 class="logs-title">
                            <i class="fas fa-list-alt"></i> –ñ–£–†–ù–ê–õ –°–û–ë–´–¢–ò–ô
                        </h2>
                        <div class="live-indicator">
                            <div class="pulse-dot"></div>
                            <span>LIVE</span>
                        </div>
                    </div>

                    <div class="cyber-logs-feed" id="cyberLogsFeed">
                        <!-- –õ–æ–≥–∏ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å—Å—è —á–µ—Ä–µ–∑ JS -->
                    </div>

                    <!-- üîÑ –ü–∞–≥–∏–Ω–∞—Ü–∏—è -->
                    <div class="cyber-pagination">
                        <button class="cyber-page-btn" id="prevPage">
                            <i class="fas fa-chevron-left"></i> –ù–∞–∑–∞–¥
                        </button>
                        <span style="color: var(--text-secondary);">–°—Ç—Ä–∞–Ω–∏—Ü–∞ 1</span>
                        <button class="cyber-page-btn" id="nextPage">
                            –í–ø–µ—Ä–µ–¥ <i class="fas fa-chevron-right"></i>
                        </button>
                    </div>
                </section>
            </main>
        </div>
    </div>

    <script>
        // üéÆ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –í–°–ï–• –ë–ò–ë–õ–ò–û–¢–ï–ö

        // –ß–∞—Å—Ç–∏—Ü—ã —Ñ–æ–Ω–∞
        particlesJS('particles-js', {
            particles: {
                number: { value: 80, density: { enable: true, value_area: 800 } },
                color: { value: "#8b5ceb" },
                shape: { type: "circle" },
                opacity: { value: 0.5, random: true },
                size: { value: 3, random: true },
                line_linked: {
                    enable: true,
                    distance: 150,
                    color: "#8b5ceb",
                    opacity: 0.2,
                    width: 1
                },
                move: {
                    enable: true,
                    speed: 2,
                    direction: "none",
                    random: true,
                    straight: false,
                    out_mode: "out",
                    bounce: false
                }
            },
            interactivity: {
                detect_on: "canvas",
                events: {
                    onhover: { enable: true, mode: "repulse" },
                    onclick: { enable: true, mode: "push" },
                    resize: true
                }
            }
        });

        // 3D —ç—Ñ—Ñ–µ–∫—Ç—ã –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫
        if (document.querySelector('.cyber-filters')) {
            VanillaTilt.init(document.querySelectorAll("[data-tilt]"), {
                max: 5,
                speed: 400,
                glare: true,
                "max-glare": 0.2,
            });
        }

        // üé≤ –î–ê–ù–ù–´–ï –õ–û–ì–û–í (–∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–∏ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ)
        const cyberLogData = [
            {
                time: "05/10/2025 18:34:04",
                category: "VIP —á–∞—Ç",
                player: "Proitv_MuzoloW",
                id: "812967",
                ip: "77.40.62.160",
                amount: "‚Äî",
                description: "–í—ã—Å—Ç–∞–≤–∏–ª –Ω–∞ –º–∞—Ä–∫–µ—Ç —Å—É–º–∫—É –¥–æ—Å—Ç–∞–≤—â–∏–∫–∞ —Ä—É–∫–∞–≤ –∫–æ–ø–∏–ª–∫–∞ –∏ –ª–µ—Ö–∞ –∫—É—Ä–∞ –≤—Å–µ –∑–∞ 50–∫–≥",
                color: "#8b5ceb"
            },
            {
                time: "05/10/2025 18:34:04",
                category: "–°–µ–º—å–∏",
                player: "Loki_Yakushev",
                id: "242187",
                ip: "62.16.54.204",
                amount: "‚Äî",
                description: "–°–µ–º—å—è: [{9932CC}PRIDE {9932CC}63 (SQLID: 2072)] –ó–∞–≥—Ä—É–∑–∏–ª –∞–≤—Ç–æ–º–æ–±–∏–ª—å: 451",
                color: "#23d160"
            },
            {
                time: "05/10/2025 18:34:04",
                category: "–ê—Ä–µ–Ω–¥–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞",
                player: "Gasoline_Forbes",
                id: "207039",
                ip: "212.124.19.153",
                amount: "-300",
                description: "–®—Ç—Ä–∞—Ñ –ø–æ—Å–ª–µ —Å–µ–º–µ–π–Ω–æ–≥–æ –î–¢–ü",
                color: "#00d4ff"
            },
            {
                time: "05/10/2025 18:34:04",
                category: "RP —á–∞—Ç",
                player: "Evgeniy_Majority",
                id: "244036",
                ip: "176.213.180.48",
                amount: "‚Äî",
                description: "—Å—è–¥—å –µ–≥–µ–¥–∏–º",
                color: "#ffdd57"
            },
            {
                time: "05/10/2025 18:34:04",
                category: "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏—è/–û—Ç–∫–ª—é—á–∞–Ω–∏—è",
                player: "Abdulbori_Flertov",
                id: "931056",
                ip: "151.252.94.227",
                amount: "300",
                description: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è. –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: Android (Play Market). APPMDID: 13427180858950330270",
                color: "#ff2a6d"
            }
        ];

        // üé® –¶–í–ï–¢–ê –î–õ–Ø –ö–ê–¢–ï–ì–û–†–ò–ô
        const categoryColors = {
            'VIP —á–∞—Ç': '#8b5ceb',
            '–°–µ–º—å–∏': '#23d160', 
            '–ê—Ä–µ–Ω–¥–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞': '#00d4ff',
            'RP —á–∞—Ç': '#ffdd57',
            'NonRP —á–∞—Ç': '#ff6b35',
            '–ñ–∞–ª–æ–±—ã/–í–æ–ø—Ä–æ—Å—ã': '#ff3860',
            '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏—è/–û—Ç–∫–ª—é—á–∞–Ω–∏—è': '#ff2a6d',
            '–ê–¥–º–∏–Ω-–¥–µ–π—Å—Ç–≤–∏—è': '#a855f7',
            '–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –∫–∞–∑–∏–Ω–æ': '#f59e0b',
            '–ù–∞—á–∞–ª—å–Ω—ã–µ —Ä–∞–±–æ—Ç—ã': '#10b981',
            '–¢—Ä–µ–π–¥—ã': '#8b5ceb'
        };

        // üõ†Ô∏è –§–£–ù–ö–¶–ò–ò

        // –°–æ–∑–¥–∞–Ω–∏–µ HTML –¥–ª—è –∑–∞–ø–∏—Å–∏ –ª–æ–≥–∞
        function createCyberLogEntry(log, index) {
            const isNegative = log.amount.startsWith('-');
            const categoryColor = categoryColors[log.category] || log.color || '#8b5ceb';
            
            return `
                <div class="cyber-log-entry" style="animation-delay: ${index * 0.1}s">
                    <div class="log-header">
                        <div>
                            <span class="log-category" style="background: ${categoryColor}20; color: ${categoryColor}; border: 1px solid ${categoryColor}40;">
                                ${log.category}
                            </span>
                            <span class="log-player">${log.player}</span>
                        </div>
                        <div class="log-amount ${isNegative ? 'negative' : ''}">
                            ${isNegative ? '‚àí' : ''}${isNegative ? log.amount.substring(1) : log.amount}
                        </div>
                    </div>
                    <div class="log-meta">
                        <span><i class="fas fa-id-card"></i> ID: ${log.id}</span>
                        <span><i class="fas fa-network-wired"></i> IP: ${log.ip}</span>
                        <span><i class="fas fa-clock"></i> ${log.time} (MSK)</span>
                    </div>
                    <div class="log-description">
                        ${log.description}
                    </div>
                </div>
            `;
        }

        // –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ª–æ–≥–æ–≤
        function populateCyberLogs() {
            const logsFeed = document.getElementById('cyberLogsFeed');
            cyberLogData.forEach((log, index) => {
                setTimeout(() => {
                    logsFeed.innerHTML += createCyberLogEntry(log, index);
                }, index * 100);
            });
        }

        // –ê–Ω–∏–º–∞—Ü–∏–∏ –ø–æ—è–≤–ª–µ–Ω–∏—è –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
        gsap.registerPlugin(ScrollTrigger);

        function initAnimations() {
            gsap.utils.toArray('.cyber-stat-card, .cyber-log-entry').forEach(item => {
                gsap.fromTo(item, {
                    opacity: 0,
                    y: 50
                }, {
                    opacity: 1,
                    y: 0,
                    duration: 0.8,
                    scrollTrigger: {
                        trigger: item,
                        start: "top 80%",
                        end: "bottom 20%",
                        toggleActions: "play none none reverse"
                    }
                });
            });

            // –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
            gsap.from('.main-title', {
                duration: 1.5,
                y: -100,
                opacity: 0,
                ease: "power3.out"
            });
        }

        // üì¶ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ü–†–ò –ó–ê–ì–†–£–ó–ö–ï
        document.addEventListener('DOMContentLoaded', function() {
            populateCyberLogs();
            initAnimations();
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
            document.getElementById('nextPage').addEventListener('click', function() {
                // –¢–≤–æ—è –ª–æ–≥–∏–∫–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
                console.log('Next page clicked');
            });
            
            document.getElementById('prevPage').addEventListener('click', function() {
                // –¢–≤–æ—è –ª–æ–≥–∏–∫–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏  
                console.log('Prev page clicked');
            });

            // –ê–Ω–∏–º–∞—Ü–∏—è –Ω–µ–æ–Ω–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            anime({
                targets: '.cyber-stat-card',
                translateY: [-10, 0],
                opacity: [0, 1],
                delay: anime.stagger(100),
                duration: 1000,
                easing: 'easeOutElastic(1, .8)'
            });
        });

        // üåê WebSocket –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ (–ø—Ä–∏–º–µ—Ä)
        function initWebSocket() {
            // –¢–≤–æ—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è WebSocket –¥–ª—è live-–æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
            /*
            const ws = new WebSocket('wss://your-server/logs');
            ws.onmessage = function(event) {
                const newLog = JSON.parse(event.data);
                addNewLogToFeed(newLog);
            };
            */
        }

        // –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ª–æ–≥–∞
        function addNewLogToFeed(log) {
            const logsFeed = document.getElementById('cyberLogsFeed');
            const newLogElement = createCyberLogEntry(log, 0);
            
            // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ª–æ–≥–∞
            logsFeed.insertAdjacentHTML('afterbegin', newLogElement);
            const newLog = logsFeed.firstElementChild;
            
            gsap.fromTo(newLog, {
                opacity: 0,
                scale: 0.8,
                y: -20
            }, {
                opacity: 1,
                scale: 1,
                y: 0,
                duration: 0.5,
                ease: "back.out(1.7)"
            });
        }
    </script>
</body>
</html>
